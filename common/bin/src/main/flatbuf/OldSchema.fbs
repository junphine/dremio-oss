// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

include "Schema.fbs";

/// !!! This file was added to keep backward compatibility with Arrow pre 2.8
/// as Arrow removed a TypeLayout field from Schema.fbs
/// In Dremio terms with Dremio pre 2.1.0
/// This should stay as is until there won't be any more installations anywhere
/// with Dremio version < 2.1.0
/// during upgrades OldSchema will be converted to a new one

namespace org.apache.arrow.flatbuf;

/// ----------------------------------------------------------------------
/// The possible types of a vector

enum VectorType: short {
  /// used in List type, Dense Union and variable length primitive types (String, Binary)
  OFFSET,
  /// actual data, either wixed width primitive types in slots or variable width delimited by an OFFSET vector
  DATA,
  /// Bit vector indicating if each value is null
  VALIDITY,
  /// Type vector used in Union type
  TYPE
}

/// ----------------------------------------------------------------------
/// represents the physical layout of a buffer
/// buffers have fixed width slots of a given type

table VectorLayout {
  /// the width of a slot in the buffer (typically 1, 8, 16, 32 or 64)
  bit_width: short;
  /// the purpose of the vector
  type: VectorType;
}

/// Only used for conversion
/// should be removed after everything migrates

table OldField {
  // Name is not required, in i.e. a List
  name: string;
  nullable: bool;
  type: Type;

  // Present only if the field is dictionary encoded
  dictionary: DictionaryEncoding;

  // children apply only to Nested data types like Struct, List and Union
  children: [OldField];
  /// layout of buffers produced for this type (as derived from the Type)
  /// does not include children
  /// each recordbatch will return instances of those Buffers.
  layout: [ VectorLayout ];
  // User-defined metadata
  custom_metadata: [ KeyValue ];
}

/// ----------------------------------------------------------------------
/// A Schema describes the columns in a row batch

table OldSchema {

  /// endianness of the buffer
  /// it is Little Endian by default
  /// if endianness doesn't match the underlying system then the vectors need to be converted
  endianness: Endianness=Little;

  fields: [OldField];
  // User-defined metadata
  custom_metadata: [ KeyValue ];
}

root_type OldSchema;
